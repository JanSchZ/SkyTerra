## SkyTerra Project - Progress and Issue Log

**NOTA PARA EL USUARIO/DESARROLLADOR:** Por favor, actualiza este archivo a medida que se completan las tareas o surgen nuevos problemas. Esto ayudar√° a mantener un seguimiento claro del progreso y facilitar√° la colaboraci√≥n, incluso si trabajas con diferentes asistentes de IA o en diferentes sesiones. Marca las tareas completadas con `[COMPLETADO]` o `[RESUELTO]`.

**Fecha de √öltima Actualizaci√≥n:** 2025-06-03 (Actualizaci√≥n cr√≠tica: Workflow de Aprobaci√≥n de Propiedades)

### **PLAN DE IMPLEMENTACI√ìN GLOBAL AJUSTADO**

**Principios Gu√≠a:**
1.  Workflow de Aprobaci√≥n de Propiedades (PRIORIDAD CR√çTICA).
2.  Estabilidad y Seguridad.
3.  Funcionalidad Core para el MVP (Producto M√≠nimo Viable).
4.  Mejoras UX incrementales y continuas.
5.  Expansi√≥n a largo plazo (m√≥vil, internacionalizaci√≥n).

---

**Fase 0: Workflow Cr√≠tico de Aprobaci√≥n de Propiedades (URGENTE - M√ÅXIMA PRIORIDAD)**
*   **Objetivo:** Implementar el workflow completo desde la subida de propiedades hasta su publicaci√≥n con tours virtuales.
*   **Tareas:**
   
    1.  **[PARCIALMENTE COMPLETADO]** üîê **Sistema de Autenticaci√≥n Mejorado:**
        *   **Subtarea:** **[COMPLETADO]** Custom authentication backend para login con username/email.
        *   **Subtarea:** **[PENDIENTE]** Sistema de recuperaci√≥n de contrase√±a por email.
        *   **Subtarea:** **[PENDIENTE]** Actualizar frontend para usar login_identifier en lugar de email.
    
    2.  **[PENDIENTE]** üìß **Sistema de Notificaciones por Email:**
        *   **Subtarea (Backend):** Implementar env√≠o de emails para:
            - Notificaci√≥n al admin cuando se sube una nueva propiedad
            - Notificaci√≥n al cliente cuando su propiedad es aprobada/rechazada
        *   **Subtarea (Frontend):** Configurar templates de email profesionales.
    
    3.  **[PENDIENTE]** üë§ **Panel de Administraci√≥n Avanzado:**
        *   **Subtarea (Backend):** 
            - Endpoints para listar propiedades pendientes de aprobaci√≥n
            - Endpoint para aprobar/rechazar propiedades
            - Endpoint para a√±adir tours virtuales a propiedades aprobadas
        *   **Subtarea (Frontend):**
            - Vista de administraci√≥n con lista de propiedades pendientes
            - Formulario para a√±adir tour virtual (URL 360¬∞)
            - Botones de aprobar/rechazar con confirmaci√≥n
    
    4.  **[PENDIENTE]** üó∫Ô∏è **Integraci√≥n Mapa con Tours 360¬∞:**
        *   **Subtarea (Frontend):**
            - Mostrar solo propiedades aprobadas en el mapa
            - Ventana flotante con datos de propiedad (sin tapar tour)
            - Integraci√≥n del tour 360¬∞ en popup/modal
            - Dise√±o responsive para diferentes tama√±os de pantalla
    
    5.  **[PENDIENTE]** üè† **Estados de Publicaci√≥n Mejorados:**
        *   **Subtarea (Backend):** Validar que el modelo Property ya tiene publication_status (‚úì VERIFICADO)
        *   **Subtarea (Frontend):** 
            - Dashboard de usuario muestra estado de sus propiedades
            - Indicadores visuales claros (pending/approved/rejected)

---

**Fase 1: Estabilizaci√≥n Post-Workflow (Alta Prioridad)**
*   **Objetivo:** Implementar las funcionalidades centrales que definen la propuesta de valor de SkyTerra, con un fuerte √©nfasis en la b√∫squeda inteligente y la versatilidad del listado de propiedades.
*   **Tareas:**
    1.  **[PENDIENTE]** üß† **IA Search Bar - Experiencia Central (Alcance Extendido):**
        *   **Subtarea (Backend):** Desarrollo avanzado de NLP y l√≥gica de recomendaci√≥n en `backend/properties/views.py` (`AISearchView`) y `backend/properties/services.py` (`GeminiService`).
            *   Interpretar consultas complejas (ej. "terreno en borde de lago sin vecinos cerca en regi√≥n de los lagos").
            *   Generar "top 3 opciones" basadas en datos de la BD (descripciones, filtros, features, ubicaci√≥n).
        *   **Subtarea (Backend):** Investigar y, si es viable, integrar APIs geoespaciales adicionales (Mapbox, Google) para an√°lisis contextual avanzado (proximidad, densidad, etc.).
        *   **Subtarea (Frontend):**
            *   Integrar "fly-to-location" din√°mico en `MapView.jsx` basado en la ubicaci√≥n de las propiedades sugeridas o el lugar buscado.
            *   Dise√±ar e implementar visualizaci√≥n de sugerencias/resultados (ej. panel flotante a la izquierda del mapa).
            *   Asegurar que maneje b√∫squedas simples por lugar (ej. "Villarrica").
        *   **Subtarea (IA/Contenido):** Desarrollar capacidad de la IA para responder FAQs b√°sicas sobre c√≥mo utilizar la plataforma.
        *   **Estado:** Dise√±o conceptual avanzado, requiere desarrollo intensivo.
    2.  **[PENDIENTE]** ‚ûï **Soporte para Arriendo/Alquiler:**
        *   **Subtarea (Backend):**
            *   Modificar modelo `Property` (`backend/properties/models.py`):
                *   A√±adir `listing_type` (choices: `sale`, `rent`, `both`, default: `sale`).
                *   A√±adir `rent_price` (DecimalField, nullable, blankable).
                *   A√±adir `rental_terms` (TextField, blankable, para condiciones espec√≠ficas de arriendo).
            *   Actualizar `PropertySerializer` y `PropertyListSerializer` (`backend/properties/serializers.py`) para incluir los nuevos campos.
            *   Modificar API endpoints en `PropertyViewSet` (`backend/properties/views.py`) para manejar los nuevos campos en la creaci√≥n, actualizaci√≥n y visualizaci√≥n.
            *   Crear y ejecutar migraci√≥n de base de datos.
        *   **Subtarea (Frontend):**
            *   Actualizar formulario de creaci√≥n/edici√≥n (`CreateProperty.jsx` y `PropertyForm.jsx`):
                *   A√±adir `Select` para `listing_type`.
                *   Mostrar campo `rent_price` condicionalmente si `listing_type` es `rent` o `both`.
                *   A√±adir campo para `rental_terms`.
            *   Actualizar filtros de b√∫squeda (`FilterPanel.jsx` u otros):
                *   A√±adir opci√≥n/toggle para filtrar por "Comprar", "Arrendar", o "Ambos".
            *   Adaptar `PropertyCard.jsx` y `PropertyDetails.jsx` para mostrar claramente la modalidad (venta/arriendo) y el precio correspondiente.
        *   **Subtarea (Admin):**
            *   Adaptar panel de gesti√≥n de propiedades para que los administradores puedan ver y gestionar ambos tipos de listados.
        *   **Estimaci√≥n:** Backend (3-5 d√≠as), Frontend (5-7 d√≠as), Testing (2-3 d√≠as).
    3.  **[PENDIENTE]** üë§ **Creaci√≥n de Cuenta Admin por Defecto:**
        *   **Subtarea (Backend):** Implementar un script, `management command`, o proceso de inicializaci√≥n para crear un superusuario con `username='admin'` y `password='SkyTerra3008%'` (la contrase√±a debe ser manejada de forma segura, idealmente establecida en el primer despliegue o mediante variables de entorno para el admin inicial).

---

**Fase 2: Funcionalidades de Usuario, Comunidad y UX Esencial (Alta Prioridad)**
*   **Objetivo:** Enriquecer la interacci√≥n del usuario con la plataforma y mejorar la usabilidad general.
*   **Tareas:**
    1.  **[PENDIENTE]** ‚ù§Ô∏è **Funcionalidad de Favoritos/Guardados:**
        *   Permitir a usuarios registrados guardar propiedades.
        *   Backend: Modelo para favoritos, API endpoints.
        *   Frontend: Bot√≥n "Guardar" en cards/details, icono distintivo.
    2.  **[PENDIENTE]** üë§ **P√°gina de Perfil de Usuario (B√°sica):**
        *   Para compradores/arrendatarios: Ver favoritos, gestionar datos b√°sicos de perfil.
        *   Para vendedores/propietarios: Ver y gestionar sus publicaciones (venta y arriendo), datos de perfil.
        *   Requiere l√≥gica de autenticaci√≥n y roles.
    3.  **[PENDIENTE]** üí¨ **Mensajer√≠a Interna (B√°sica) o Flujo de Contacto Mejorado:**
        *   Dise√±ar e implementar un sistema para que los usuarios puedan contactar a los publicadores sobre propiedades espec√≠ficas.
        *   Considerar si se implementa un chat interno completo o un formulario de contacto robusto con notificaciones por email al propietario.
    4.  **[PENDIENTE]** ‚ú® **Feedback Visual Claro y Consistente:**
        *   Revisar y mejorar el uso de Snackbars, loaders, modales de confirmaci√≥n, y mensajes de √©xito/error en toda la aplicaci√≥n para una UX m√°s pulida.
    5.  **[PENDIENTE]** üè° **Redise√±o UI `Dashboard.jsx` (Panel de Usuario Propietario/Vendedor/Admin):**
        *   Aplicar dise√±o minimalista y moderno con cards para propiedades.
        *   Paginaci√≥n. Bot√≥n "Crear Nueva Propiedad".
        *   Asegurar que la UX est√© personalizada seg√∫n el rol del usuario logueado (qu√© acciones y vistas est√°n disponibles).

---

**Fase 3: Expansi√≥n de Funcionalidad y Maduraci√≥n (Media Prioridad)**
*   **Objetivo:** A√±adir funcionalidades m√°s complejas y refinar la plataforma.
*   **Tareas:**
    1.  **[PENDIENTE]** üí≥ **Implementar Sistema de Transacciones B√°sico:**
        *   **Primero:** Definici√≥n clara del alcance (¬øSon ofertas formales, reservas, un sistema de pago inicial?).
        *   Dise√±o detallado de la UX y los flujos antes de la implementaci√≥n.
        *   Backend: Modelos, l√≥gica de negocio, posibles integraciones con pasarelas de pago.
        *   Frontend: Interfaz para gestionar estas transacciones.
    2.  **[PENDIENTE]** üé® **Unificar Tema Oscuro y Estilo Visual Globalmente:**
        *   Asegurar consistencia de dise√±o, tipograf√≠a, colores, y componentes en toda la aplicaci√≥n.
    3.  **[PENDIENTE]** üì± **Optimizaci√≥n M√≥vil Detallada (para la Web App) y Pruebas de Accesibilidad.**
        *   Asegurar que la PWA o web app sea completamente responsive y accesible.
    4.  **[PENDIENTE]** üí° **Onboarding/Ayuda R√°pida para nuevos usuarios:**
        *   Tooltips, gu√≠as interactivas cortas, o integraci√≥n con la IA para ayudar a los usuarios a entender c√≥mo usar las funciones clave.

---

**Fase 4: Crecimiento y Plataformas Adicionales (Largo Plazo / Estrat√©gico)**
*   **Objetivo:** Expandir el alcance y las capacidades de SkyTerra.
*   **Tareas:**
    1.  **[PENDIENTE]** üìä **Panel Anal√≠tico para Administradores:**
        *   Estad√≠sticas sobre propiedades, usuarios, b√∫squedas, etc.
    2.  **[PENDIENTE]** üîî **Notificaciones Avanzadas (Email/In-app):**
        *   Alertas personalizadas, res√∫menes, etc.
    3.  **[PENDIENTE]** üåç **Internacionalizaci√≥n:**
        *   Soporte para m√∫ltiples idiomas (ej. ingl√©s) en contenido y UI.
    4.  **[PENDIENTE]** üì± **Desarrollo de Aplicaciones M√≥viles Nativas (Android & iOS):**
        *   **Consideraciones Iniciales:**
            *   **Alcance MVP M√≥vil:** Definir funcionalidades esenciales para la v1 de las apps.
            *   **Tecnolog√≠a:** Evaluar React Native, Flutter, o Nativo (Swift/Kotlin).
            *   **API Backend:** Debe estar preparada para soportar clientes m√≥viles.
            *   **Dise√±o UX/UI Espec√≠fico para M√≥vil:** No una simple adaptaci√≥n de la web.
            *   **Gesti√≥n de Estado y Datos Offline:** Considerar si se requiere.
            *   **Push Notifications:** Planificar integraci√≥n (FCM/APNs).
            *   **Recursos:** Evaluar necesidades de equipo.

---

**Historial de Cambios Recientes en el Log:**
*   2025-05-29: Reestructuraci√≥n completa del plan en Fases (0 a 4).
*   2025-05-29: Elevada prioridad y alcance de la "IA Search Bar - Experiencia Central" a Fase 1.
*   2025-05-29: Integrado "Soporte para Arriendo/Alquiler" como alta prioridad en Fase 1.
*   2025-05-29: A√±adida tarea "Creaci√≥n de Cuenta Admin por Defecto" a Fase 1.
*   2025-05-29: A√±adida "Desarrollo de Aplicaciones M√≥viles Nativas (Android & iOS)" a Fase 4 con consideraciones iniciales.
*   2025-05-29: Re-priorizadas otras tareas seg√∫n el nuevo enfoque estrat√©gico.
*   2025-05-30: Actualizado el estado de los puntos 3 y 4 de la Fase 0 (edificios 3D resuelto, error de update depth pospuesto/no prioritario).
*   2025-05-30: **[COMPLETADO]** Eliminada la restricci√≥n en el backend para que todas las propiedades sean visibles en el mapa, independientemente del estado de publicaci√≥n o si el usuario est√° autenticado/staff. C√≥digo pusheado a GitHub.
*   **[RESUELTO - 3 Jun 2025]** üêõ **BUG DE REGISTRO DE USUARIOS SOLUCIONADO:**
    * **Problema identificado:** Bug que imped√≠a crear nuevas cuentas de usuario normal (no admin).
    * **Causa ra√≠z:** La prop `onRegister` no estaba siendo pasada correctamente desde `App.jsx` a `AuthPage.jsx`, impidiendo que el formulario de registro llamara a la funci√≥n que inicia el proceso de registro en el servicio de API.
    * **Soluciones implementadas:**
        1. ‚úÖ Instalaci√≥n de `react-chartjs-2` y `chart.js` (resolvi√≥ un error de importaci√≥n relacionado con gr√°ficos).
        2. ‚úÖ Aplicaci√≥n completa de migraciones Django (ver log anterior).
        3. ‚úÖ Mejora en detecci√≥n autom√°tica de entorno (Codespaces vs localhost) (ver log anterior).
        4. ‚úÖ Validaciones mejoradas en formulario de registro (ver log anterior).
        5. ‚úÖ Logging detallado para debugging en backend y frontend (ver log anterior).
        6. ‚úÖ Mejor manejo de errores con mensajes espec√≠ficos (ver log anterior).
        7. ‚úÖ **[FIX FRONTE ND]** Pasada expl√≠citamente la prop `onRegister` (`handleRegister` de App.jsx) al componente `AuthPage` en `App.jsx` para las rutas `/login` y `/register`.
    * **Testing realizado:**
        - Endpoint `/api/auth/register/` funciona correctamente.
        - Formulario frontend valida datos correctamente.
        - Respuestas de error claras y espec√≠ficas.
        - Usuarios creados exitosamente (IDs 5, 6, nuevo usuario creado durante el debugging actual).
        - El flujo completo formulario -> App.jsx -> api.js -> Backend funciona correctamente.
    * **Estado:** Completamente funcional
    * **Pr√≥ximos pasos:** Continuar con testing de flujo completo registro ‚Üí login ‚Üí dashboard. Asegurar que los gr√°ficos en el admin dashboard funcionen correctamente ahora que las librer√≠as de charting est√°n instaladas.

---

**[2025-06-03] AVANCE Y SIGUIENTES PASOS CR√çTICOS - PANEL DE ADMIN SKYTERRA**

[COMPLETADO]
- Redirecci√≥n autom√°tica de admins a /admin-dashboard tras login.
- Layout base de panel admin con sidebar y topbar, colores y fuentes ajustados seg√∫n feedback.
- Eliminada navegaci√≥n accidental al mapa desde el panel admin.

[PENDIENTE - CR√çTICO]
1. **Navegaci√≥n Admin Fluida:**
   - [ ] Crear componentes y rutas para `/admin-dashboard`, `/admin-properties`, `/admin-tickets`, `/admin-users`, `/admin-settings` (aunque sean placeholders).
   - [ ] Asegurar que el sidebar solo navegue entre secciones admin.

2. **Dashboard Visual y M√©tricas:**
   - [ ] Backend: Endpoint `/api/admin/dashboard-summary/` con m√©tricas clave (propiedades pendientes, tickets abiertos, usuarios nuevos, etc.).
   - [ ] Frontend: Mostrar tarjetas de m√©tricas reales y placeholders para gr√°ficos/listas r√°pidas.

3. **Gesti√≥n de Propiedades Admin:**
   - [ ] Vista de propiedades pendientes de aprobaci√≥n.
   - [ ] Botones para aprobar/rechazar propiedades desde el panel admin.

4. **Gesti√≥n de Tickets de Soporte:**
   - [ ] Listar tickets abiertos y permitir responder/cerrar desde el panel admin.

5. **Gesti√≥n de Usuarios:**
   - [ ] Listar usuarios, ver detalles y cambiar estado (activo/inactivo).

[NOTA]
- El dise√±o visual debe seguir la inspiraci√≥n de dashboards modernos (Linear Admin, UBOLD, etc.) y la paleta de azules oscuros con acentos claros.
- El panel admin debe ser completamente independiente de la experiencia de usuario normal.

---
