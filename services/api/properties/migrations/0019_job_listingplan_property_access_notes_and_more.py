# Generated by Django 4.2.23 on 2025-10-09 16:49

from decimal import Decimal
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('properties', '0018_tour_status'),
    ]

    operations = [
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('draft', 'En preparación'), ('inviting', 'Buscando piloto'), ('assigned', 'Piloto asignado'), ('scheduling', 'Coordinando agenda'), ('scheduled', 'Agenda confirmada'), ('shooting', 'En grabación'), ('finished', 'Grabación finalizada'), ('uploading', 'Subiendo material'), ('received', 'Material recibido'), ('qc', 'Control de calidad'), ('editing', 'En edición'), ('preview_ready', 'Preview listo'), ('ready_for_publish', 'Listo para publicar'), ('published', 'Publicado'), ('canceled', 'Cancelado')], default='draft', max_length=32)),
                ('price_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('pilot_payout_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('scheduled_start', models.DateTimeField(blank=True, null=True)),
                ('scheduled_end', models.DateTimeField(blank=True, null=True)),
                ('invite_wave', models.PositiveIntegerField(default=0)),
                ('last_status_change_at', models.DateTimeField(auto_now=True)),
                ('notes', models.TextField(blank=True)),
                ('vendor_instructions', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='ListingPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(max_length=120)),
                ('description', models.TextField(blank=True)),
                ('price', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('entitlements', models.JSONField(blank=True, default=dict, help_text='Configuración de entregables/beneficios del plan.')),
                ('sla_hours', models.JSONField(blank=True, default=dict, help_text="Horas estimadas por nodo. Ej: {'review': 24, 'post': 72}")),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['price', 'name'],
            },
        ),
        migrations.AddField(
            model_name='property',
            name='access_notes',
            field=models.TextField(blank=True, help_text='Instrucciones de acceso, seguridad, contacto, etc.'),
        ),
        migrations.AddField(
            model_name='property',
            name='preferred_time_windows',
            field=models.JSONField(blank=True, default=list, help_text="Ventanas sugeridas por el vendedor para coordinar visita (estructura [{'day':'2024-04-01','range':['09:00','12:00']}, ...])"),
        ),
        migrations.AddField(
            model_name='property',
            name='seller_notes',
            field=models.TextField(blank=True, help_text='Notas internas para el equipo SkyTerra.'),
        ),
        migrations.AddField(
            model_name='property',
            name='workflow_alerts',
            field=models.JSONField(blank=True, default=list, help_text="Alertas visibles para el vendedor (estructura [{'type': 'warning', 'message': '...'}])"),
        ),
        migrations.AddField(
            model_name='property',
            name='workflow_node',
            field=models.CharField(choices=[('review', 'Publicación en revisión'), ('approved', 'Publicación aprobada'), ('pilot', 'Piloto de dron asignado'), ('post', 'Multimedia en postproducción'), ('live', 'Publicación activa')], default='review', max_length=20),
        ),
        migrations.AddField(
            model_name='property',
            name='workflow_progress',
            field=models.PositiveIntegerField(default=0, help_text='Progreso porcentual 0-100 del flujo completo'),
        ),
        migrations.AddField(
            model_name='property',
            name='workflow_substate',
            field=models.CharField(choices=[('draft', 'Borrador'), ('submitted', 'Enviada'), ('under_review', 'En revisión'), ('changes_requested', 'Requiere correcciones'), ('resubmitted', 'Correcciones enviadas'), ('approved_for_shoot', 'Lista para grabación'), ('inviting', 'Buscando piloto'), ('assigned', 'Piloto asignado'), ('scheduling', 'Coordinando fecha'), ('scheduled', 'Agenda confirmada'), ('shooting', 'En grabación'), ('finished', 'Grabación finalizada'), ('uploading', 'Subiendo material'), ('received', 'Material recibido'), ('qc', 'Control de calidad'), ('editing', 'En postproducción'), ('preview_ready', 'Preview listo'), ('ready_for_publish', 'Listo para publicar'), ('published', 'Publicación activa')], default='draft', max_length=32),
        ),
        migrations.CreateModel(
            name='PropertyStatusHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('node', models.CharField(choices=[('review', 'Publicación en revisión'), ('approved', 'Publicación aprobada'), ('pilot', 'Piloto de dron asignado'), ('post', 'Multimedia en postproducción'), ('live', 'Publicación activa')], max_length=20)),
                ('substate', models.CharField(choices=[('draft', 'Borrador'), ('submitted', 'Enviada'), ('under_review', 'En revisión'), ('changes_requested', 'Requiere correcciones'), ('resubmitted', 'Correcciones enviadas'), ('approved_for_shoot', 'Lista para grabación'), ('inviting', 'Buscando piloto'), ('assigned', 'Piloto asignado'), ('scheduling', 'Coordinando fecha'), ('scheduled', 'Agenda confirmada'), ('shooting', 'En grabación'), ('finished', 'Grabación finalizada'), ('uploading', 'Subiendo material'), ('received', 'Material recibido'), ('qc', 'Control de calidad'), ('editing', 'En postproducción'), ('preview_ready', 'Preview listo'), ('ready_for_publish', 'Listo para publicar'), ('published', 'Publicación activa')], max_length=32)),
                ('percent', models.PositiveIntegerField(default=0)),
                ('message', models.TextField(blank=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('actor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='property_status_events', to=settings.AUTH_USER_MODEL)),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='status_history', to='properties.property')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PilotProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('display_name', models.CharField(blank=True, max_length=120)),
                ('rating', models.DecimalField(decimal_places=2, default=Decimal('5.00'), max_digits=3)),
                ('score', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5)),
                ('completed_jobs', models.PositiveIntegerField(default=0)),
                ('status', models.CharField(choices=[('pending', 'Pendiente'), ('approved', 'Aprobado'), ('rejected', 'Rechazado'), ('suspended', 'Suspendido')], default='pending', max_length=20)),
                ('is_available', models.BooleanField(default=False)),
                ('location_latitude', models.FloatField(blank=True, null=True)),
                ('location_longitude', models.FloatField(blank=True, null=True)),
                ('last_heartbeat_at', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='pilot_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='JobTimelineEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kind', models.CharField(max_length=50)),
                ('message', models.TextField(blank=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('actor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='job_timeline_events', to=settings.AUTH_USER_MODEL)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='timeline', to='properties.job')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='job',
            name='assigned_pilot',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_jobs', to='properties.pilotprofile'),
        ),
        migrations.AddField(
            model_name='job',
            name='plan',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='properties.listingplan'),
        ),
        migrations.AddField(
            model_name='job',
            name='property',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='job', to='properties.property'),
        ),
        migrations.AddField(
            model_name='property',
            name='plan',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='properties', to='properties.listingplan'),
        ),
        migrations.CreateModel(
            name='PilotDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doc_type', models.CharField(choices=[('id', 'Identificación'), ('license', 'Licencia de piloto'), ('drone_registration', 'Registro de dron'), ('insurance', 'Seguro'), ('other', 'Otro')], max_length=50)),
                ('file', models.FileField(upload_to='pilot_documents/')),
                ('status', models.CharField(choices=[('pending', 'Pendiente'), ('approved', 'Aprobado'), ('rejected', 'Rechazado'), ('expired', 'Vencido')], default='pending', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('expires_at', models.DateField(blank=True, null=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('pilot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='properties.pilotprofile')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_pilot_documents', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-uploaded_at'],
                'unique_together': {('pilot', 'doc_type')},
            },
        ),
        migrations.CreateModel(
            name='JobOffer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wave', models.PositiveIntegerField(default=1)),
                ('status', models.CharField(choices=[('pending', 'Pendiente'), ('accepted', 'Aceptada'), ('declined', 'Rechazada'), ('expired', 'Expirada'), ('canceled', 'Cancelada')], default='pending', max_length=20)),
                ('score', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5)),
                ('radius_km', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=6)),
                ('ttl_seconds', models.PositiveIntegerField(default=20)),
                ('sent_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('responded_at', models.DateTimeField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='offers', to='properties.job')),
                ('pilot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='offers', to='properties.pilotprofile')),
            ],
            options={
                'ordering': ['-sent_at'],
                'unique_together': {('job', 'pilot')},
            },
        ),
    ]
